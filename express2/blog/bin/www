#!/usr/bin/env node
// 头标记,表明是node可执行文件

// 加载依赖
var app = require('../app'); // 引入app.js导出的app实例
var debug = require('debug')('blog:server'); // debug调试模块
var http = require('http');

// 设置端口号
var port = normalizePort(process.env.PORT || '1234');
app.set('port', port);

// 创建服务
var server = http.createServer(app);

// 监听3000端口
server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

// 格式化端口号
function normalizePort(val) {
    var port = parseInt(val, 10);

        if (isNaN(port)) {
        // named pipe
        return val;
    }

        if (port >= 0) {
        // port number
        return port;
    }

    return false;
}

// 监听失败
function onError(error) {
    if (error.syscall !== 'listen') {
        throw error;
    }

    var bind = typeof port === 'string' ? 'Pipe ' + port  : 'Port ' + port;

    switch (error.code) {
        case 'EACCES':
            console.error(bind + ' requires elevated privileges');
            process.exit(1);
            break;
        case 'EADDRINUSE':
            console.error(bind + ' is already in use');
            process.exit(1);
            break;
        default:
            throw error;
    }
}

// 监听成功
function onListening() {
    var addr = server.address();
    var bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port;
    debug('Listening on ' + bind);
}
